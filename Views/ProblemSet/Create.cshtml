@model ProblemSets.Models.ProblemSet
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Create";
}

<h1>@Localizer["Create"]</h1>
<h4>@Localizer["Problem"]</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="UploadFile" id="FileUploadForm">
                <div class="form-group">
                    <label class="control-label">@Localizer["Name"]</label>
                    <input asp-for="Name" required="required" class="form-control" requied/>
                    <input type="hidden" asp-for="AppUserId"  value="@ViewBag.IdForAdmin"/>
                    
                </div><br>
                <div class="form-group">
                    <label asp-for="Theme">@Localizer["Topic"] &#160</label>
                    <select asp-for="Theme" asp-items="ViewBag.Topics"></select>
                </div><br>
                
                <label class="control-label">@Localizer["Tags"]</label>
                            <div class="chips chips-placeholder">
                                <div class="chip"><i class="close material-icons">close</i></div>
                            </div><br>

                <div class="form-group">
                    <label class="control-label">@Localizer["Question"]</label><br />
                    <textarea asp-for="ProblemQuestion" id="my-text-area"></textarea>
                    <script>
                      const easyMDE = new EasyMDE({element: document.getElementById('my-text-area')});
                    </script>
                </div><br>
           
                
               <div class="form-group">
                               <label class="control-label">@Localizer["Answer"]</label>
                               <div class="chips chips-initial">
                                   <div class="chip"><i class="close material-icons">close</i></div>
                               </div>
                           </div><br>
            <div class="dropzone" id="myDropzone"></div><br>
                <div class="form-group">
                    <input type="submit" id="submit-all" value="@Localizer["Create"]" class="btn btn-primary" />
                </div><br>
        </form>
            
    </div>
</div>


<div>
    <a asp-action="Index" asp-route-userId="@ViewBag.IdForAdmin">@Localizer["Back"]</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}




<script type="text/javascript">
(function($){
  $(function(){

	
	$('.chipsss').material_chip();
    
   
   
        
	$('.chips-placeholder').material_chip({
	  data: [],
	  placeholder: '@Localizer["Enter a tag"]',
	  secondaryPlaceholder: '@Localizer["Enter a tag"]',
	  
	  
	});
	
	
    $('.chips-initial').material_chip({
       data: [],
       placeholder: '@Localizer["Enter Answer"]',
       secondaryPlaceholder: '@Localizer["Enter Answer"]',
       
      });

    
    
	$(".dropdown-trigger").dropdown();
    
    
      $('.chips-initial').on('chip.add', function(e, chip){
          alert(chip.tag)
          console.log(chip)
         
          pushAnswers(chip.tag)
          
        // you have the added chip here
      });
    
      $('.chips-initial').on('chip.delete', function(e, chip){
       alert("pek")
       console.log(chip)
        dropAnswers(chip.tag)
      });
      
       $('.chips-placeholder').on('chip.add', function(e, chip){
                
                 pushChips(chip.tag)
            });
            $('.chips-placeholder').on('chip.delete', function(e, chip){
             
             dropChips(chip.tag)
             
            });
    
      $('.chips').on('chip.select', function(e, chip){
        alert("end")
      });

  }); 
})(jQuery);
</script>


<script>
var tag= []
var answers= []
function pushChips(chip){
tag.push(chip)
console.log(tag)}

function dropChips(chip){
var pos=tag.indexOf(chip)
if (pos > -1) {
  tag.splice(pos, 1);
}
console.log(tag)}

function pushAnswers(chip){
answers.push(chip)
console.log(answers)}

function dropAnswers(chip){
var pos=answers.indexOf(chip)
if (pos > -1) {
  answers.splice(pos, 1);
}
console.log(answers)}

function getChips(){  
      document.getElementById('myField').value=tag;}  
function getAnswers(){
    document.getElementById('myAnswers').value=answers;}  

</script>

<link href="~/Dropzone/css/basic.css" rel="stylesheet" />
<link href="~/Dropzone/css/dropzone.css" rel="stylesheet" />
<script src="~/Dropzone/dropzone.min.js"></script>
<script type="text/javascript">
        Dropzone.options.myDropzone= {
            dictDefaultMessage : "@Localizer["Drop files here to upload"]",
            url: "/ProblemSet/UploadFile",
            autoProcessQueue: false,
            uploadMultiple: true,
            parallelUploads: 100,
            maxFiles: 100,
            maxFilesize: 1,
            acceptedFiles: 'image/*',
            addRemoveLinks: true,
            init: function() {
                dzClosure = this; 
                document.getElementById("submit-all").addEventListener("click", function(e) {
                    
                    e.preventDefault();
                    e.stopPropagation(); 
                    var fields = ["Name"]
                if (fields.some(element => this.form[element].value ==="") || tag.length===0 || answers.length===0 ||easyMDE.value()==="" ) {
                    alert( "не все поля заполнены") }
                else{
                  if (dzClosure.getQueuedFiles().length > 0) {
                      dzClosure.processQueue();
                      load();}
                  else {tag.forEach(elem => {
                                   var input = document.createElement("input");
                                   input.setAttribute("type", "hidden");
                                   input.setAttribute("name", "ProblemTag");
                                   input.setAttribute("value", "value_you_want");
                                   input.setAttribute("value", elem);
                                   document.getElementById("FileUploadForm").appendChild(input);})
                        answers.forEach(elem => {
                                   var input = document.createElement("input");
                                   input.setAttribute("type", "hidden");
                                   input.setAttribute("name", "ProblemAnswer");
                                   input.setAttribute("value", "value_you_want");
                                   input.setAttribute("value", elem);
                                   document.getElementById("FileUploadForm").appendChild(input);})
                                   
                        this.form.submit()
                        load();
                        }}  
                });
                this.on("sendingmultiple", function(data, xhr, formData) {
                    
                    formData.append("ProblemQuestion", easyMDE.value());
                    formData.append("Name", jQuery("#Name").val());
                    formData.append("Theme", jQuery("#Theme").val());
                    formData.append("AppUserId", jQuery("#AppUserId").val());
                    tag.forEach(elem => formData.append("ProblemTag", elem))
                    answers.forEach(elem => formData.append("ProblemAnswer", elem))
                });  
            }
        }
</script>

<script>
function load() {   
    setTimeout(() => { window.location.replace("/ProblemSet");  }, 1000);
} 
</script>

<style>
.dz-default{
color: #050505;
}
</style>



