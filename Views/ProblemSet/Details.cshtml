@model ProblemSets.Models.ProblemSet
@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> signInManager
@inject UserManager<AppUser> userManager
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = "View Mode";
}


<h1>@Localizer["Problem"]</h1>
<div>
    <h4>@Model.Name @if (Model.AverageRate == null)
                    {
                        <span style="color:#ff0000"> &#9733 @Localizer["No ratings"]</span>
                    }
                    else
                    {
                        <span style="color:#ff0000">&#9733</span> @Math.Round((double) Model.AverageRate, 2, MidpointRounding.AwayFromZero)
                    }</h4>
    <hr/>
    @if (ViewBag.Rating!=null)
    {
    
    }


    else
    {
        <form asp-action="SendRate" asp-route-id="@Model.Id">
            <div class="rate">
                <input type="radio" id="star5" name="rate" value="5"/>
                <label for="star5" @*title="text"*@>5 stars</label>
                <input type="radio" id="star4" name="rate" value="4"/>
                <label for="star4" @*title="text"*@>4 stars</label>
                <input type="radio" id="star3" name="rate" value="3"/>
                <label for="star3" @*title="text"*@>3 stars</label>
                <input type="radio" id="star2" name="rate" value="2"/>
                <label for="star2" @*title="text"*@>2 stars</label>
                <input type="radio" id="star1" name="rate" value="1"/>
                <label for="star1" @*title="text"*@>1 star</label>
            </div>
            <input type="submit" value="@Localizer["Rate"]" class="btn btn-danger"/>
        </form>
    }
    
    <br><dl class="row">
        <dt class="col-sm-2">
            <label class="control-label">@Localizer["Topic"]</label>
        </dt>
        <dd class = "col-sm-10">
            <label class="control-label">@Model.Theme</label>
        </dd>
        <dt class="col-sm-2">
            <label class="control-label">@Localizer["Tags"]</label>
        </dt>
        <dd class = "col-sm-10">
            @foreach (var item in Model.ProblemTag)
            {
                <label class="control-label">@item</label>
            }
        </dd>
        <dt class="col-sm-2">
            <label class="control-label">@Localizer["Question"]</label></dt>
        <dd class="col-sm-10">
            <span id="my-text-area" style="white-space: pre-line">@Model.ProblemQuestion</span>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/showdown/1.4.0/showdown.min.js"></script>
            <script>
            var conv = new showdown.Converter();
            var txt = document.getElementById('my-text-area').innerHTML;
            document.getElementById('my-text-area').innerHTML = conv.makeHtml(txt);
            </script>
        </dd>
    </dl>
</div>


@foreach (var item in ViewBag.Pictures) {
    <div>
        <Img src="@item.PictureName" Width=80%>
    </div>
        
}
<br>
@if (TempData.ContainsKey("Has Solution"))
{
    <div class ="alert alert-success" role="alert">@Localizer["Has Solution"]@TempData["Has Solution"]</div>
}
else
{
    <form asp-action="SendSolution" asp-route-id="@Model.Id">
        <div class="form-group">
            <label class="control-label">@Localizer["Answer"]</label>
            <input type="text" name="ProblemAnswer" class="form-control"/>
        </div>
        <br><input type="submit" value="@Localizer["Send"]" class="btn btn-danger"/>
    </form>
    <br>
@if (signInManager.IsSignedIn(User))
    {
        <div>
            <a asp-action="Index" asp-route-userId="@Model.AppUserId">@Localizer["Back"]</a>
        </div><br>
        
}
  

@if (ViewBag.Solution=="Wrong")
{
    <div class ="alert alert-danger" role="alert">@Localizer["Wrong"]</div>
}
@if (ViewBag.Solution=="Correct")
{
    <div class ="alert alert-success" role="alert">@Localizer["Correct"]</div>
}
}

<style>
*{
    margin: 0;
    padding: 0;
}
.rate {
    float: left;
    height: 46px;
    padding: 0 10px;
}
.rate:not(:checked) > input {
    position:absolute;
    top:-9999px;
}
.rate:not(:checked) > label {
    float:right;
    width:1em;
    overflow:hidden;
    white-space:nowrap;
    cursor:pointer;
    font-size:30px;
    color:#ccc;
}
.rate:not(:checked) > label:before {
    content: 'â˜… ';
}
.rate > input:checked ~ label {
    color: #ffc700;    
}
.rate:not(:checked) > label:hover,
.rate:not(:checked) > label:hover ~ label {
    color: #deb217;  
}
.rate > input:checked + label:hover,
.rate > input:checked + label:hover ~ label,
.rate > input:checked ~ label:hover,
.rate > input:checked ~ label:hover ~ label,
.rate > label:hover ~ input:checked ~ label {
    color: #c59b08;
}
</style>



